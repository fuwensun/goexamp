// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"

	// _ "google/api"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	Message              string   `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Reply struct {
	Message              string   `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Count                int64    `protobuf:"zigzag64,2,opt,name=Count,proto3" json:"Count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Reply) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type UserT struct {
	Uid                  int64    `protobuf:"zigzag64,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Sex                  int64    `protobuf:"zigzag64,3,opt,name=Sex,proto3" json:"Sex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserT) Reset()         { *m = UserT{} }
func (m *UserT) String() string { return proto.CompactTextString(m) }
func (*UserT) ProtoMessage()    {}
func (*UserT) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *UserT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserT.Unmarshal(m, b)
}
func (m *UserT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserT.Marshal(b, m, deterministic)
}
func (m *UserT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserT.Merge(m, src)
}
func (m *UserT) XXX_Size() int {
	return xxx_messageInfo_UserT.Size(m)
}
func (m *UserT) XXX_DiscardUnknown() {
	xxx_messageInfo_UserT.DiscardUnknown(m)
}

var xxx_messageInfo_UserT proto.InternalMessageInfo

func (m *UserT) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserT) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserT) GetSex() int64 {
	if m != nil {
		return m.Sex
	}
	return 0
}

type UidT struct {
	Uid                  int64    `protobuf:"zigzag64,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UidT) Reset()         { *m = UidT{} }
func (m *UidT) String() string { return proto.CompactTextString(m) }
func (*UidT) ProtoMessage()    {}
func (*UidT) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *UidT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UidT.Unmarshal(m, b)
}
func (m *UidT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UidT.Marshal(b, m, deterministic)
}
func (m *UidT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UidT.Merge(m, src)
}
func (m *UidT) XXX_Size() int {
	return xxx_messageInfo_UidT.Size(m)
}
func (m *UidT) XXX_DiscardUnknown() {
	xxx_messageInfo_UidT.DiscardUnknown(m)
}

var xxx_messageInfo_UidT proto.InternalMessageInfo

func (m *UidT) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func init() {
	proto.RegisterType((*Request)(nil), "service.goms.Request")
	proto.RegisterType((*Reply)(nil), "service.goms.Reply")
	proto.RegisterType((*UserT)(nil), "service.goms.UserT")
	proto.RegisterType((*UidT)(nil), "service.goms.UidT")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 371 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xcf, 0x6a, 0xdb, 0x40,
	0x10, 0xc6, 0x91, 0x25, 0xd5, 0xf6, 0xd0, 0x16, 0xb3, 0x6e, 0x8d, 0x50, 0x7b, 0x30, 0xdb, 0x8b,
	0xf1, 0x41, 0xa2, 0xed, 0xa1, 0xd0, 0x4b, 0xa1, 0x76, 0x2f, 0x2d, 0x35, 0x46, 0xb6, 0x2e, 0xbd,
	0xad, 0xab, 0x89, 0x58, 0x90, 0xb5, 0x1b, 0xad, 0x64, 0x6c, 0x42, 0x2e, 0xb9, 0xe4, 0x01, 0xf2,
	0x68, 0x79, 0x85, 0x3c, 0x48, 0xd0, 0x4a, 0x82, 0x44, 0xc8, 0xb9, 0xcd, 0x9f, 0xef, 0xfb, 0xed,
	0xcc, 0x0e, 0x0c, 0x99, 0xe4, 0x9e, 0xcc, 0x44, 0x2e, 0xc8, 0x6b, 0x85, 0xd9, 0x81, 0xff, 0x47,
	0x2f, 0x16, 0x7b, 0xe5, 0x7e, 0x8c, 0x85, 0x88, 0x13, 0xf4, 0x99, 0xe4, 0x3e, 0x4b, 0x53, 0x91,
	0xb3, 0x9c, 0x8b, 0x54, 0x55, 0x5a, 0xf7, 0x43, 0xdd, 0xd5, 0xd9, 0xae, 0xb8, 0xf0, 0x71, 0x2f,
	0xf3, 0x53, 0xd5, 0xa4, 0x9f, 0xa0, 0x1f, 0xe0, 0x65, 0x81, 0x2a, 0x27, 0x0e, 0xf4, 0xff, 0xa2,
	0x52, 0x2c, 0x46, 0xc7, 0x98, 0x1a, 0xb3, 0x61, 0xd0, 0xa4, 0xf4, 0x1b, 0xd8, 0x01, 0xca, 0xe4,
	0x74, 0x5e, 0x42, 0xde, 0x81, 0xbd, 0x10, 0x45, 0x9a, 0x3b, 0xbd, 0xa9, 0x31, 0x23, 0x41, 0x95,
	0xd0, 0x1f, 0x60, 0x87, 0x0a, 0xb3, 0x2d, 0x19, 0x81, 0x19, 0xf2, 0x48, 0x9b, 0x48, 0x50, 0x86,
	0x84, 0x80, 0xb5, 0x62, 0x7b, 0xd4, 0xfa, 0x61, 0xa0, 0xe3, 0x52, 0xb5, 0xc1, 0xa3, 0x63, 0x56,
	0xaa, 0x0d, 0x1e, 0xa9, 0x03, 0x56, 0xc8, 0xa3, 0x0e, 0xff, 0x97, 0x5b, 0x13, 0xac, 0x92, 0x4d,
	0x96, 0x60, 0xad, 0x79, 0x1a, 0x93, 0xf7, 0xde, 0xd3, 0x3f, 0xf1, 0xea, 0xad, 0xdc, 0x71, 0xbb,
	0x2c, 0x93, 0x13, 0x1d, 0xdd, 0xdc, 0x3f, 0xdc, 0xf5, 0x80, 0x0c, 0xfc, 0xc3, 0x67, 0x5f, 0x96,
	0xee, 0xdf, 0x00, 0x8b, 0x0c, 0x59, 0x8e, 0x9a, 0xd9, 0x32, 0xe9, 0x1d, 0x5c, 0xd2, 0x2a, 0xf2,
	0x68, 0x4b, 0xc7, 0x1a, 0xf4, 0x86, 0x6a, 0x50, 0xa1, 0x30, 0xfb, 0x6e, 0xcc, 0xc9, 0x0a, 0x20,
	0x94, 0xd1, 0x8b, 0xac, 0x89, 0x57, 0x1d, 0xc5, 0x6b, 0x8e, 0xe2, 0xfd, 0x2a, 0x8f, 0xd2, 0xf0,
	0xdc, 0x67, 0xbc, 0x3f, 0x30, 0x08, 0x90, 0x45, 0x9a, 0xd6, 0x31, 0x84, 0xdb, 0xf5, 0x02, 0x9d,
	0x68, 0xd2, 0x88, 0xbc, 0x6d, 0x48, 0xfe, 0x55, 0xc8, 0xa3, 0x6b, 0xb2, 0x06, 0x58, 0x62, 0x82,
	0xf5, 0x70, 0x5d, 0xb8, 0x73, 0xb3, 0xd5, 0xc4, 0x79, 0x8b, 0xf8, 0xd3, 0xfe, 0x67, 0x32, 0xc9,
	0x77, 0xaf, 0xb4, 0xfc, 0xeb, 0x63, 0x00, 0x00, 0x00, 0xff, 0xff, 0x62, 0xdd, 0xd7, 0x7a, 0xa6,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error)
	CreateUser(ctx context.Context, in *UserT, opts ...grpc.CallOption) (*UidT, error)
	UpdateUser(ctx context.Context, in *UserT, opts ...grpc.CallOption) (*empty.Empty, error)
	ReadUser(ctx context.Context, in *UidT, opts ...grpc.CallOption) (*UserT, error)
	DeleteUser(ctx context.Context, in *UidT, opts ...grpc.CallOption) (*empty.Empty, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/service.goms.User/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) CreateUser(ctx context.Context, in *UserT, opts ...grpc.CallOption) (*UidT, error) {
	out := new(UidT)
	err := c.cc.Invoke(ctx, "/service.goms.User/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) UpdateUser(ctx context.Context, in *UserT, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/service.goms.User/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) ReadUser(ctx context.Context, in *UidT, opts ...grpc.CallOption) (*UserT, error) {
	out := new(UserT)
	err := c.cc.Invoke(ctx, "/service.goms.User/ReadUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) DeleteUser(ctx context.Context, in *UidT, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/service.goms.User/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	Ping(context.Context, *Request) (*Reply, error)
	CreateUser(context.Context, *UserT) (*UidT, error)
	UpdateUser(context.Context, *UserT) (*empty.Empty, error)
	ReadUser(context.Context, *UidT) (*UserT, error)
	DeleteUser(context.Context, *UidT) (*empty.Empty, error)
}

// UnimplementedUserServer can be embedded to have forward compatible implementations.
type UnimplementedUserServer struct {
}

func (*UnimplementedUserServer) Ping(ctx context.Context, req *Request) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedUserServer) CreateUser(ctx context.Context, req *UserT) (*UidT, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedUserServer) UpdateUser(ctx context.Context, req *UserT) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (*UnimplementedUserServer) ReadUser(ctx context.Context, req *UidT) (*UserT, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadUser not implemented")
}
func (*UnimplementedUserServer) DeleteUser(ctx context.Context, req *UidT) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUser not implemented")
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.goms.User/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Ping(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserT)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.goms.User/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).CreateUser(ctx, req.(*UserT))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserT)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.goms.User/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).UpdateUser(ctx, req.(*UserT))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_ReadUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UidT)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).ReadUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.goms.User/ReadUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).ReadUser(ctx, req.(*UidT))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UidT)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.goms.User/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).DeleteUser(ctx, req.(*UidT))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.goms.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _User_Ping_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _User_CreateUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _User_UpdateUser_Handler,
		},
		{
			MethodName: "ReadUser",
			Handler:    _User_ReadUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _User_DeleteUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
