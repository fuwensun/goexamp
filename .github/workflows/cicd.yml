name: cicd-main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  env:
    name: env
    runs-on: ubuntu-latest
    steps:
    - name: Print env
      run: |
        whoami
        pwd
        which go
        which docker
        groups $(whoami)
        ls -a -l ./
        go env GOPROXY
        docker images

  tool:
    name: tool
    runs-on: ubuntu-latest
    env:
      CHUB: ${{ secrets.DOCKER_HUB }}
      CHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      CHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      GOMS_NAME_SPACE: ${{ secrets.DOCKER_USERNAME }}
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: mock
      working-directory: ./tests/mock/build
      run: |
        docker login -u $CHUB_USERNAME -p $CHUB_PASSWORD $CHUB
        make docker
        make push

  test:
    name: test
    runs-on: ubuntu-latest

    services:
      mysql:
        image: gomshub/goms-mysqltest:v2.2.1
        ports:
          - 3306:3306
      redis:
        image: gomshub/goms-redistest:v1.4.2
        ports:
          - 6379:6379

    steps:

    - name: Set up Go 1.15
      uses: actions/setup-go@v1
      with:
        go-version: 1.15
      id: go

    - name: Check out code
      uses: actions/checkout@v2

    - name: Unit test
      env:
        CI_ENV_DOCKER: no
      working-directory: ./tests/unit
      run: |
        bash ./run.sh

    - name: Integration test
      working-directory: ./tests/integration
      run: |
        source ./install.sh
        bash ./run.sh

  build:
    name: build
    runs-on: ubuntu-latest
    env:
      CHUB: ${{ secrets.DOCKER_HUB }}
      CHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      CHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      GOMS_NAME_SPACE: ${{ secrets.DOCKER_USERNAME }}

    steps:

    - name: Set up Go 1.15
      uses: actions/setup-go@v1
      with:
        go-version: 1.15
      id: go

    - name: Check out code
      uses: actions/checkout@v2

    - name: build
      working-directory: ./build
      run: |
        docker login -u $CHUB_USERNAME -p $CHUB_PASSWORD $CHUB
        chmod +x ./build.sh && ./build.sh
